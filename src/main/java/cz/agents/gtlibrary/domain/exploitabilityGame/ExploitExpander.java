/*
Copyright 2014 Faculty of Electrical Engineering at CTU in Prague

This file is part of Game Theoretic Library.

Game Theoretic Library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Game Theoretic Library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Game Theoretic Library.  If not, see <http://www.gnu.org/licenses/>.*/


package cz.agents.gtlibrary.domain.exploitabilityGame;

import cz.agents.gtlibrary.iinodes.ExpanderImpl;
import cz.agents.gtlibrary.interfaces.Action;
import cz.agents.gtlibrary.interfaces.AlgorithmConfig;
import cz.agents.gtlibrary.interfaces.GameState;
import cz.agents.gtlibrary.interfaces.InformationSet;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by kail on 7/1/14.
 */
public class ExploitExpander<I extends InformationSet> extends ExpanderImpl<I> {
    private ExploitGameInfo gameInfo;

    public ExploitExpander(AlgorithmConfig<I> algConfig,ExploitGameInfo gameInfo) {
        super(algConfig);
        this.gameInfo = gameInfo;
    }

    @Override
    public List<Action> getActions(GameState gameState) {
        List<Action> actions = new ArrayList<Action>();

        ExploitGameState gs = (ExploitGameState)gameState;
        if (gs.isGameEnd()) return actions;

        for (Action a : (List<Action>)gameInfo.getOtherExpander().getActions(gs.getOtherGameState())) {
            actions.add(new ExploitAction(a, getAlgorithmConfig().getInformationSetFor(gameState)));
        }
        return actions;
    }
}
