<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cz.agents</groupId>
    <artifactId>gtlibrary</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>gtlibrary</name>
    <description>
        This library contains a domain-independent framework for modeling normal-form and extensive-form games,
        and offers a unique collection of algorithms for solving these games.
    </description>

    <properties>
        <maven.compiler.source>1.9</maven.compiler.source>
        <maven.compiler.target>1.9</maven.compiler.target>
    </properties>


<dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.jacop/jacop -->
        <dependency>
            <groupId>org.jacop</groupId>
            <artifactId>jacop</artifactId>
            <version>4.4.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/gov.nist.math/jama -->
        <dependency>
            <groupId>gov.nist.math</groupId>
            <artifactId>jama</artifactId>
            <version>1.0.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jgraph/jgraph -->
        <!--<dependency>-->
            <!--<groupId>org.jgraph</groupId>-->
            <!--<artifactId>jgraph</artifactId>-->
            <!--<version>5.12.4</version>-->
        <!--</dependency>-->

        <!-- https://mvnrepository.com/artifact/org.jgrapht/jgrapht-jdk1.5 -->
        <dependency>
            <groupId>org.jgrapht</groupId>
            <artifactId>jgrapht-jdk1.5</artifactId>
            <version>0.7.3</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.wicket/wicket -->
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket</artifactId>
            <version>6.3.0</version>
            <type>pom</type>
        </dependency>

        <!--
        You need to install cplex locally as it is not available in maven repositories.

        Open the terminal and cd to your project directory. Install cplex.jar in your maven repo:
        mvn install:install-file \
            -DgroupId=cplex \
            -DartifactId=cplex \
            -Dversion=12.8.0.0 \
            -Dpackaging=jar \
            -Dfile=cplex.jar

        If you're using Eclipse, re-initialize the IDE:
            mvn eclipse:eclipse

        Re-build the project:
            mvn clean package

        That should resolve the dependency problems. However, in order to run the Java main program,
        you need to add the following Run Configuration to the VM Arguments (under Arguments):
            -Djava.library.path=/opt/ibm/ILOG/CPLEX_Studioxxx/cplex/bin/x86-64_xxx

        Replace [your-cplex-version], [path-to-cplex.jar] and xxx appropriately.
        -->
        <dependency>
            <groupId>cplex</groupId>
            <artifactId>cplex</artifactId>
            <version>12.8.0.0</version>
        </dependency>

    </dependencies>


    <build>
        <finalName>gtlibrary</finalName>
        <plugins>
            <!-- download source code in Eclipse, best practice -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>

            <!-- Set a compiler level -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <compilerArgument>-J -Xss512M</compilerArgument>
                </configuration>
            </plugin>

            <!-- Make this jar executable -->
            <!-- include dependencies -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
        </plugins>


        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <compilerVersion>1.9</compilerVersion>
                        <source>1.9</source>
                        <target>1.9</target>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
